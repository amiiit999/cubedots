# Generated by Django 3.1.7 on 2021-04-28 08:05

import crm_cubedots.model.account
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('email', models.EmailField(max_length=60, unique=True, verbose_name='Email')),
                ('username', models.CharField(blank=True, max_length=30, null=True)),
                ('date_joined', models.DateTimeField(blank=True, null=True, verbose_name='Date of Joined')),
                ('last_login', models.DateTimeField(auto_now=True, verbose_name='Last Login')),
                ('is_admin', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('first_name', models.CharField(blank=True, max_length=50, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=50, verbose_name='last name')),
                ('role', models.CharField(max_length=50, null=True, verbose_name='Role')),
                ('date_of_birth', models.DateTimeField(blank=True, null=True, verbose_name='Date of Birth')),
                ('avatar', models.ImageField(null=True, upload_to=crm_cubedots.model.account.users_profile_picture_directory_path, verbose_name='Image')),
                ('designation', models.CharField(max_length=50, null=True, verbose_name='Designation')),
                ('contact_no', models.CharField(blank=True, max_length=100, verbose_name='Phone Number')),
                ('team_name', models.CharField(max_length=60, null=True, verbose_name='Team Name')),
                ('team_leader', models.CharField(max_length=60, null=True, verbose_name='Team Leader')),
                ('manager_name', models.CharField(max_length=60, null=True, verbose_name='Manager Name')),
                ('status', models.CharField(max_length=60, null=True, verbose_name='Status')),
                ('date_exited', models.DateTimeField(blank=True, null=True, verbose_name='Date of Exited')),
                ('local_address', models.CharField(max_length=200, null=True, verbose_name='Local Address')),
                ('permanent_address', models.CharField(max_length=200, null=True, verbose_name='Permanent Address')),
                ('gender', models.CharField(max_length=20, null=True, verbose_name='Gender')),
                ('blood_group', models.CharField(max_length=10, null=True, verbose_name='Blood Group')),
                ('skills', models.CharField(max_length=200, null=True, verbose_name='Skills')),
                ('qualifications', models.CharField(max_length=100, null=True, verbose_name='Qualifications')),
                ('access_group', models.IntegerField(choices=[(4, 4), (3, 3), (2, 2), (1, 1)], default=1, verbose_name='permission group')),
                ('postal_code', models.IntegerField(blank=True, null=True, verbose_name='Pin Code')),
                ('approval_status', models.CharField(max_length=60, null=True, verbose_name='Approval Status')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Departments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'departments',
            },
        ),
        migrations.CreateModel(
            name='Projects',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.CharField(max_length=200)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'projects',
            },
        ),
        migrations.CreateModel(
            name='ProjectsCategories',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'projects_categories',
            },
        ),
        migrations.CreateModel(
            name='TaskCategories',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parent_id', models.IntegerField(default=0)),
                ('name', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='departmentId', to='crm_cubedots.departments')),
            ],
            options={
                'db_table': 'task_categories',
            },
        ),
        migrations.CreateModel(
            name='Tasks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parent_id', models.BigIntegerField(default=0)),
                ('dependency_id', models.BigIntegerField(default=0)),
                ('is_extra', models.IntegerField(default=0)),
                ('taskid', models.CharField(max_length=100)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.CharField(max_length=50)),
                ('process_status', models.CharField(max_length=50)),
                ('progress', models.IntegerField(default=0)),
                ('task_started_at', models.DateTimeField(blank=True, null=True)),
                ('task_ended_at', models.DateTimeField(blank=True, null=True)),
                ('task_duration', models.BigIntegerField(blank=True, default=0, null=True)),
                ('work_started_at', models.DateTimeField(blank=True, null=True)),
                ('work_ended_at', models.DateTimeField(blank=True, null=True)),
                ('work_duration', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tasksDepartmentId', to='crm_cubedots.departments', verbose_name='Department Name')),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tasksProjectId', to='crm_cubedots.projects', verbose_name='Project Name')),
                ('qc', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tasksQcId', to=settings.AUTH_USER_MODEL, verbose_name='QC Name')),
                ('task_category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tasksCatId', to='crm_cubedots.taskcategories', verbose_name='Task Categories Name')),
                ('tl', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tasksTlId', to=settings.AUTH_USER_MODEL, verbose_name='TL Name')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tasksUserId', to=settings.AUTH_USER_MODEL, verbose_name='User Name')),
            ],
            options={
                'db_table': 'tasks',
            },
        ),
        migrations.AddField(
            model_name='projects',
            name='project_category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='projectCategoryId', to='crm_cubedots.projectscategories'),
        ),
        migrations.AddField(
            model_name='account',
            name='department',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='DepartmentsId', to='crm_cubedots.departments', verbose_name='Department Name'),
        ),
        migrations.AddField(
            model_name='account',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='account',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
